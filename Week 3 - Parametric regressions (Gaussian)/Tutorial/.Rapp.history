? shapiro.test
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(runif(100, min = 2, max = 4))
y <- rt(200, df = 5)#
qqnorm(y); qqline(y, col = 2)#
qqplot(y, rt(300, df = 5))
o
qqnorm(precip, ylab = "Precipitation [in/yr] for 70 US cities")
qqplot(qchisq(ppoints(500), df = 3), y,#
       main = expression("Q-Q plot for" ~~ {chi^2}[nu == 3]))#
qqline(y, distribution = function(p) qchisq(p, df = 3),#
       prob = c(0.1, 0.6), col = 2)#
mtext("qqline(*, dist = qchisq(., df=3), prob = c(0.1, 0.6))")
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)#
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)#
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))#
weight <- c(ctl, trt)#
lm.D9 <- lm(weight ~ group)#
lm.D90 <- lm(weight ~ group - 1) # omitting intercept
summary(lm.D90)
coef(summary(lm.D90))
coef(lm.D90)
coef(lm.D9)
coef(lm.D9)[,"(Intercept)"]
coef(lm.D9)["(Intercept)"]
data.In<-read.csv("~/Dropbox/Courses_&_Conferences/2018/Courses/Statistical & Geospatial modeling/Lectures/Week - 37/Practical/Part_3/paruelo.csv")#
#1)	Describe the correlation matrix between the evaluated predictors#
cor(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")])
summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients
plot(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))
(StrzCoef<-round((summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[-1,1])*c(apply(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")],2,sd)/sd(data.In$LC3)),3))
data.In.2<-data.In[,c("LC3","LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")]
data.In.2<-data.In[,c("LC3","LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")]#
data.In.2[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")]<-scale(data.In.2[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")])
summary(lm(LC3~-1+LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In.2)
)
round((summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[-1,1])*c(apply(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")],2,sd)/sd(data.In$LC3)),3)
coef(summary(lm(LC3~-LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In.2)))
coef(summary(lm(LC3~-1+LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In.2)))
round((summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[-1,1])*c(apply(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")],2,sd)/sd(data.In$LC3)),3)
(Tolerance<-sapply(c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP"),function(i){round(1-summary(lm(formula(paste(i,"~",paste(c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")[!c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")%in%i],collapse="+"),sep="")),data= data.In))$r.squared,3)}))
data.frame(round(summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[,1:2],3),#
		   StrzCoef=c(0, StrzCoef),#
		   Tolerance=c(NA,Tolerance),#
		   round(summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[,3:4],3))
data.In<-read.csv("~/Dropbox/Courses_&_Conferences/2018/Courses/Statistical & Geospatial modeling/Lectures/Week - 37/Practical/Part_2/peake.csv")#
#2.	Explore and test is these are normally distributed (as done in the exercise above)#
### test for AREA#
hist(data.In$AREA)#
shapiro.test(data.In$AREA)
shapiro.test(data.In$SPECIES)
shapiro.test(log10(data.In$INDIV))
qqnorm(log10(data.In$INDIV));qqline(log10(data.In$INDIV))
plot(LSPECIES~AREA,data= data.In,pch=19,cex=1.5,main="Log-transform SPECIES")#
Reg.2a<-lm(LSPECIES~AREA,data= data.In)#
abline(Reg.2a)#
cor(data.In$LSPECIES,data.In$AREA)
par(mfcol=c(1,1))#
plot(LSPECIES~LAREA,data= data.In,pch=19,cex=1.5,main="Log-transform AREA")#
Reg.2a<-lm(LSPECIES~LAREA,data= data.In)#
abline(Reg.2a)#
cor(data.In$LSPECIES,data.In$LAREA)
Pred.2a<-predict(Reg.2a,newdata=data.frame(LAREA=seq(min(data.In$LAREA),max(data.In$LAREA),length.out=100)),#
				interval="confidence")#
### Upper bound#
lines(x=seq(min(data.In$LAREA),max(data.In$LAREA),length.out=100),#
	  y= Pred.2a[,"lwr"],lty=2)				#
### Lower bound#
lines(x=seq(min(data.In$LAREA),max(data.In$LAREA),length.out=100),#
	  y= Pred.2a[,"upr"],lty=2)
anova(Reg.2a)
summary(Reg.2a)$coefficients
summary(Reg.2a)$r.squared
plot(INDIV ~AREA,data= data.In,pch=19,cex=1.5)#
Reg.3<-lm(INDIV ~AREA,data= data.In)#
abline(Reg.3)#
cor(data.In$INDIV,data.In$AREA)
data.In<-read.csv("~/Dropbox/Courses_&_Conferences/2018/Courses/Statistical & Geospatial modeling/Lectures/Week - 37/Practical/Part_3/paruelo.csv")#
#1)	Describe the correlation matrix between the evaluated predictors#
cor(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")])
abs(cor(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")]))>0.7
plot(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))
(StrzCoef<-round((summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[-1,1])*c(apply(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")],2,sd)/sd(data.In$LC3)),3))
StrzCoef
a<-data.frame(LC3=data.In$LC3,scale(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")]))
lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=a)
(StrzCoef<-round((summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[-1,1])*c(apply(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")],2,sd)/sd(data.In$LC3)),3))
lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=a)
lm(LC3~-1+LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=a)
data.In
(StrzCoef<-round((summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[-1,1])*c(apply(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")],2,sd)/sd(data.In$LC3)),3))
a<-data.frame(LC3=data.In$LC3,scale(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")]))#
lm(LC3~-1+LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=a)
lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=a)
summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In)
)
a<-data.frame(scale(data.In[,c("LC3","LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")]))
lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=a)
round(coef(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=a)),3)
(StrzCoef<-round((summary(lm(LC3~LAT+LONG+MAP+MAT+JJAMAP+DJFMAP,data=data.In))$coefficients[-1,1])*c(apply(data.In[,c("LAT","LONG","MAP","MAT","JJAMAP","DJFMAP")],2,sd)/sd(data.In$LC3)),3))
? qqnorm
? plot
?lm
?coef
? cor
var(1:10)
cor(1:10, 2:11)
cor(1:10, 2:11,3:12)
cor(c(1:10, 2:11,3:12))
var(c(1:10, 2:11,3:12))
cor(data.frame(1:10, 2:11,3:12))
car::vif(model1)
require(car)
vif
